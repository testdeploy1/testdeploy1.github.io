{"version":3,"sources":["webpack:///./src/components/animated.js","webpack:///./src/components/home/homeMain.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/defaults/seo.js","webpack:///./src/components/defaults/leftSide.js","webpack:///./src/components/defaults/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Animated","props","_React$useState","React","from","animatedProps","setAnimatedProps","reset","timer","setTimeout","requestAnimationFrame","Object","assign","inverse","to","transition","transitionProperty","duration","delay","clearTimeout","children","HomeMain","react","className","animated","width","style","IndexPage","react_default","a","createElement","layout","seo","title","homeMain","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","render","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","SEO","_ref","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","arrayOf","Header","siteTitle","gatsby_browser_entry","activeClassName","Layout","Fragment","leftSide","_755544856","node","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-pages-index-js-a79cebbd4df760a334b3.js","sourcesContent":["import * as React from \"react\"\r\n\r\nconst Animated = (props) => {\r\n    let [animatedProps, setAnimatedProps] = React.useState(props.from)\r\n\r\n    React.useEffect(() => {\r\n        if (props.reset) {\r\n            setAnimatedProps(props.from)\r\n        }\r\n        const timer = setTimeout(() => {\r\n            requestAnimationFrame(() =>\r\n                setAnimatedProps({\r\n                    ...(props.inverse ? props.from : props.to),\r\n                    transition: `${props.transitionProperty || \"all\"} .${props.duration ||\r\n                        700 / 100}s  cubic-bezier(.19,1,.21,1) `,\r\n                })\r\n            )\r\n        }, props.delay || 0)\r\n\r\n        return () => clearTimeout(timer)\r\n    }, [props.reset, props.inverse])\r\n\r\n    return props.children(animatedProps)\r\n}\r\n\r\nexport default Animated;","import * as React from 'react';\r\n// import Img from \"../defaults/image\"\r\nimport Animated from \"../animated\"\r\n\r\n\r\nconst HomeMain = () => {\r\n    return (\r\n        <div className=\"home-background\">\r\n            <Animated\r\n                from={{ width: \"0\" }}\r\n                to={{ width: \"50%\" }}\r\n            >\r\n                {\r\n                    props => (\r\n                        <h1 style={props}>Arsen Navasardi</h1>\r\n                    )\r\n                }\r\n            </Animated>\r\n            <div className=\"moving-background\" />\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default HomeMain;","import React from \"react\"\r\n//import { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/defaults/layout\"\r\n//import Image from \"../components/defaults/image\"\r\nimport SEO from \"../components/defaults/seo\"\r\nimport HomeMain from \"../components/home/homeMain\";\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <HomeMain />\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\"\r\nimport \"../../style/home/home.scss\"\r\n\r\nconst Header = ({ siteTitle }) => {\r\n  return (<aside>\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link\r\n            to=\"/\"\r\n            activeClassName=\"active\"\r\n          >\r\n            Home\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            activeClassName=\"active\"\r\n            to=\"/works/\"\r\n          >\r\n            Art Works\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            activeClassName=\"active\"\r\n            to=\"/portfolio/\"\r\n          >\r\n            Comercial Portfolios\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link\r\n            activeClassName=\"active\"\r\n            to=\"/studio/\"\r\n          >\r\n            studio\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <div className=\"social-icons\">\r\n      <i className=\"icon-facebook-logo\"></i>\r\n      <i className=\"icon-instagram-logo\"></i>\r\n      <i className=\"icon-black-back-closed-envelope-shape\"></i>\r\n    </div>\r\n  </aside>);\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport Header from \"./leftSide\";\r\nimport \"../../style/style.css\"\r\nimport \"./layout.css\";\r\nimport \"../../style/media.scss\"\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <main>{children}</main>\r\n        <footer>\r\n\r\n        </footer>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}